<!DOCTYPE html>
<html lang="en-us">

<head>
    <meta charset="utf-8">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <title>Unity WebGL Player | web stuff</title>
    <link rel="shortcut icon" href="/public/TemplateData/favicon.ico">
    <link rel="stylesheet" href="/public/TemplateData/style.css">
</head>

<body>
    <p>this is to test the index page </p>
    <div id="unity-container" class="unity-desktop">
        <canvas id="unity-canvas" width=960 height=600></canvas>
        <div id="unity-loading-bar">
            <div id="unity-logo"></div>
            <div id="unity-progress-bar-empty">
                <div id="unity-progress-bar-full"></div>
            </div>
        </div>
        <div id="unity-warning"> </div>
        <div id="unity-footer">
            <div id="unity-webgl-logo"></div>
            <div id="unity-fullscreen-button"></div>
            <div id="unity-build-title">Fullscreen</div>
        </div>
    </div>
    <p>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Quasi velit aspernatur, molestias a atque nobis provident reiciendis earum tenetur voluptatibus maiores corporis. Quod ut nisi at! Porro dolor ipsa nostrum?
    Nihil, dolorum? Maiores aliquid, adipisci voluptatem aut autem recusandae illo incidunt a in minus, perspiciatis sint. Voluptatem omnis ex excepturi error mollitia quo repellendus nulla debitis, deserunt odio, rem nam!
    Iste, incidunt sunt nihil facere, sint molestiae consequuntur recusandae autem quibusdam adipisci minima tempora atque, quo cum. Magni facere facilis cumque, consequuntur ea non aliquam eligendi, aperiam error exercitationem similique!
    Repudiandae quam voluptates aliquid similique, delectus possimus iste fuga. Fugiat delectus suscipit dolore magnam voluptates aliquam alias ab accusantium illo, tempora dolorum quia nulla? Voluptatibus deserunt et reiciendis ipsa error.
    Sunt magnam fugit corrupti nemo est dicta, obcaecati similique aspernatur itaque. Culpa maxime deleniti doloribus, ad voluptates quaerat eos adipisci velit veritatis ratione totam illum sed repudiandae similique possimus libero?</p>
    <script>
        var container = document.querySelector("#unity-container");
        var canvas = document.querySelector("#unity-canvas");
        var loadingBar = document.querySelector("#unity-loading-bar");
        var progressBarFull = document.querySelector("#unity-progress-bar-full");
        var fullscreenButton = document.querySelector("#unity-fullscreen-button");
        var warningBanner = document.querySelector("#unity-warning");

        // Shows a temporary message banner/ribbon for a few seconds, or
        // a permanent error message on top of the canvas if type=='error'.
        // If type=='warning', a yellow highlight color is used.
        // Modify or remove this function to customize the visually presented
        // way that non-critical warnings and error messages are presented to the
        // user.
        function unityShowBanner(msg, type) {
            function updateBannerVisibility() {
                warningBanner.style.display = warningBanner.children.length ? 'block' : 'none';
            }
            var div = document.createElement('div');
            div.innerHTML = msg;
            warningBanner.appendChild(div);
            if (type == 'error') div.style = 'background: red; padding: 10px;';
            else {
                if (type == 'warning') div.style = 'background: yellow; padding: 10px;';
                setTimeout(function () {
                    warningBanner.removeChild(div);
                    updateBannerVisibility();
                }, 5000);
            }
            updateBannerVisibility();
        }

        var buildUrl = "/public/Build";
        var loaderUrl = buildUrl + "/allah.loader.js";
        var config = {
            dataUrl: buildUrl + "/allah.data",
            frameworkUrl: buildUrl + "/allah.framework.js",
            codeUrl: buildUrl + "/allah.wasm",
            streamingAssetsUrl: "StreamingAssets",
            companyName: "DefaultCompany",
            productName: "web stuff",
            productVersion: "0.1",
            showBanner: unityShowBanner,
        };

        // By default Unity keeps WebGL canvas render target size matched with
        // the DOM size of the canvas element (scaled by window.devicePixelRatio)
        // Set this to false if you want to decouple this synchronization from
        // happening inside the engine, and you would instead like to size up
        // the canvas DOM size and WebGL render target sizes yourself.
        // config.matchWebGLToCanvasSize = false;

        if (/iPhone|iPad|iPod|Android/i.test(navigator.userAgent)) {
            // Mobile device style: fill the whole browser client area with the game canvas:

            var meta = document.createElement('meta');
            meta.name = 'viewport';
            meta.content = 'width=device-width, height=device-height, initial-scale=1.0, user-scalable=no, shrink-to-fit=yes';
            document.getElementsByTagName('head')[0].appendChild(meta);
            container.className = "unity-mobile";

            // To lower canvas resolution on mobile devices to gain some
            // performance, uncomment the following line:
            // config.devicePixelRatio = 1;

            canvas.style.width = window.innerWidth + 'px';
            canvas.style.height = window.innerHeight + 'px';

            unityShowBanner('WebGL builds are not supported on mobile devices.');
        } else {
            // Desktop style: Render the game canvas in a window that can be maximized to fullscreen:

            canvas.style.width = "960px";
            canvas.style.height = "600px";
        }

        loadingBar.style.display = "block";

        var script = document.createElement("script");
        script.src = loaderUrl;
        script.onload = () => {
            createUnityInstance(canvas, config, (progress) => {
                progressBarFull.style.width = 100 * progress + "%";
            }).then((unityInstance) => {
                loadingBar.style.display = "none";
                fullscreenButton.onclick = () => {
                    unityInstance.SetFullscreen(1);
                };
            }).catch((message) => {
                alert(message);
            });
        };
        document.body.appendChild(script);
    </script>
</body>

</html>